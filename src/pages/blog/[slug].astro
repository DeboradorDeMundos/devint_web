---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Header from "../../components/common/Header.astro";
import Footer from "../../components/common/Footer.astro";
import { getEntryBySlug } from "astro:content";
import { formatDate, formatRelativeTime } from "../../utils/format";

const { slug } = Astro.params;
const post = await getEntryBySlug("blog", slug ?? "");

if (!post) {
  throw Astro.redirect("/blog", 302);
}

const { Content } = await post.render();
const { data } = post;

const seoTitle = data.seo?.title ?? `${data.title} | Blog Devint`;
const seoDescription = data.seo?.description ?? data.excerpt;
const canonical = `https://devint.cl/blog/${post.slug}`;
---

<BaseLayout
  title={seoTitle}
  description={seoDescription}
  image={data.image}
  seo={{
    canonical,
    type: "article",
    keywords: data.seo?.keywords,
    author: data.author,
    publishedTime: data.publishDate.toISOString(),
    modifiedTime: (data.updatedDate ?? data.publishDate).toISOString(),
  }}
>
  <Header />

  <main class="pt-24">
    <article class="pb-20">
      <div class="container mx-auto px-6 max-w-4xl">
        <header class="mb-10">
          <a href="/blog" class="inline-flex items-center gap-2 text-sm text-emerald-300 hover:text-emerald-200">
            <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
            Volver al blog
          </a>
          <p class="mt-6 text-xs uppercase tracking-[0.3em] text-emerald-300">{data.category}</p>
          <h1 class="mt-3 text-4xl font-bold text-white lg:text-5xl">{data.title}</h1>
          <p class="mt-4 text-lg text-slate-300">{data.description}</p>
          <div class="mt-6 flex flex-wrap gap-4 text-sm text-slate-400">
            <span>{formatDate(data.publishDate)}</span>
            {data.updatedDate && (
              <span>Actualizado {formatRelativeTime(data.updatedDate)}</span>
            )}
            {data.readingTime && <span>{data.readingTime} min de lectura</span>}
          </div>
        </header>

        <img src={data.image} alt={data.title} class="mb-10 h-72 w-full rounded-3xl object-cover" loading="lazy" />

        <div class="prose prose-invert prose-headings:text-white prose-a:text-emerald-300 prose-strong:text-white max-w-none">
          <Content />
        </div>

        {data.tags.length > 0 && (
          <footer class="mt-12 flex flex-wrap gap-3">
            {data.tags.map((tag) => (
              <span class="rounded-full border border-slate-700 bg-slate-900 px-3 py-1 text-xs text-slate-300">#{tag}</span>
            ))}
          </footer>
        )}
      </div>
    </article>
  </main>

  <Footer />
</BaseLayout>
